>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrixa = [[1,2,3], [4,5,6], [7,8,9]]
>>> matrixb = [[1,2,3], [4,5,6]]
>>> 
>>> matrix_divided(matrixa, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]
>>> matrix_divided(matrixb, 4)
[[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]
>>> matrix_divided(matrixb, 4.5)
[[0.22, 0.44, 0.67], [0.89, 1.11, 1.33]]
>>> matrix_divided(matrixa, 'b')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(None, 5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 15, in matrix_divided
    raise TypeError(error)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrixa, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 32, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrixc = [[1,2],[3,4,5],[6,4,5,3]]
>>> matrix_divided(matrixc, 7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 30, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")        
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrixa, matrixb)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrixb, 45.722)
[[0.02, 0.04, 0.07], [0.09, 0.11, 0.13]]
